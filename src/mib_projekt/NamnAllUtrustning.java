/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib_projekt;

import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author hillv
 */
public class NamnAllUtrustning extends javax.swing.JFrame {
    
    private InfDB idb;
    private int valtUtrustningID;
    /**
     * Creates new form NamnAllUtrustning
     */
    public NamnAllUtrustning() {
        initComponents();
          try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("Databasanslutning lyckades");
            fyllCbtnUtrustningNamn();
        } catch (InfException ettUndantag) {
            // Visa felmeddelande om det uppstår problem med databasanslutningen
            JOptionPane.showMessageDialog(null, "Något gick fel vid anslutning till databasen!");
            System.out.println("Internt felmeddelande: " + ettUndantag.getMessage());
        }
    }
    
     private void fyllCbtnUtrustningNamn() {
        try {
            // SQL-fråga för att hämta Plats_ID och Benamning från plats-tabellen
            String fraga = "SELECT Utrustnings_ID, Benamning FROM Utrustning;";
            // Utför SQL-frågan och få resultatet
            var resultat = idb.fetchRows(fraga);

            // Iterera över varje rad i resultatet
            for (HashMap<String, String> rad : resultat) {
                // Hämta Plats_ID och Benamning från raden
                String UtrustningIdStr = rad.get("Utrustnings_ID");
                String utrustningNamn = rad.get("Benamning");

                // Kontrollera om Plats_ID är inte null
                if (UtrustningIdStr != null) {
                    // Konvertera Plats_ID till integer
                    int AlienID = Integer.parseInt(UtrustningIdStr);
                    // Lägg till Benamning i dropdown-menyn
                    cbtnUtrustning.addItem(utrustningNamn);
                }
            }
        } catch (InfException ex) {
            // Visa felmeddelande om något går fel med databasen
            JOptionPane.showMessageDialog(null, "Något gick fel!");
        System.out.println("Internt felmeddelande: " + ex.getMessage());
        ex.printStackTrace(); // Lägg till denna rad för att skriva ut detaljerad felinformation i konsolen
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbtnUtrustning = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnTillbaka2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Utrustning:");

        jButton1.setText("Radera");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnTillbaka2.setText("Tillbaka");
        btnTillbaka2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbaka2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbtnUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(213, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTillbaka2)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka2)
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbtnUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         try {
        // Hämta det valda utrustningsnamnet från ComboBoxen
        String valtUtrustningNamn = (String) cbtnUtrustning.getSelectedItem();

        // Kontrollera om något är valt
        if (valtUtrustningNamn != null && !valtUtrustningNamn.isEmpty()) {
            // Hämta Utrustning_ID för det valda utrustningsnamnet
            String fragaUtrustningID = "SELECT Utrustnings_ID FROM Utrustning WHERE Benamning = '" + valtUtrustningNamn + "';";
            String utrustningID = idb.fetchSingle(fragaUtrustningID);

            // Kontrollera om Utrustning_ID är inte null
            if (utrustningID != null && !utrustningID.isEmpty()) {
                // Använd Utrustning_ID för att ta bort kopplingar i relaterade tabeller

                // 1. Ta bort kopplingar i Vapen-tabellen
                String fragaVapen = "DELETE FROM Vapen WHERE Utrustnings_ID = " + utrustningID + ";";
                idb.delete(fragaVapen);

                // 2. Ta bort kopplingar i Teknik-tabellen
                String fragaTeknik = "DELETE FROM Teknik WHERE Utrustnings_ID = " + utrustningID + ";";
                idb.delete(fragaTeknik);

                // 3. Ta bort kopplingar i Kommunikation-tabellen
                String fragaKommunikation = "DELETE FROM Kommunikation WHERE Utrustnings_ID = " + utrustningID + ";";
                idb.delete(fragaKommunikation);

                // 4. Ta bort kopplingar i Innehar_Utrustning-tabellen
                String fragaInnehar = "DELETE FROM Innehar_Utrustning WHERE Utrustnings_ID = " + utrustningID + ";";
                idb.delete(fragaInnehar);

                // Nu kan du radera utrustningen från Utrustning-tabellen
                String fragaRaderaUtrustning = "DELETE FROM Utrustning WHERE Utrustnings_ID = " + utrustningID + ";";
                idb.delete(fragaRaderaUtrustning);

                // Meddela användaren att utrustningen har raderats
                JOptionPane.showMessageDialog(null, "Utrustningen har raderats.");

                // Uppdatera ComboBoxen med de återstående utrustningarna
                fyllCbtnUtrustningNamn();
            } else {
                // Meddela användaren att Utrustning_ID inte kunde hämtas
                JOptionPane.showMessageDialog(null, "Kunde inte hämta Utrustning_ID.");
            }
        } else {
            // Meddela användaren att ingen utrustning är vald
            JOptionPane.showMessageDialog(null, "Ingen utrustning är vald.");
        }
    } catch (InfException ex) {
        // Visa felmeddelande om något går fel med databasen
        JOptionPane.showMessageDialog(null, "Något gick fel vid radering av utrustning.");
        System.out.println("Internt felmeddelande: " + ex.getMessage());
    }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnTillbaka2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbaka2ActionPerformed
        // TODO add your handling code here:
        EfterInloggAdmin nytt = new EfterInloggAdmin();
        NamnAllUtrustning.this.setVisible(false);
        nytt.setVisible(true);
    }//GEN-LAST:event_btnTillbaka2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NamnAllUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NamnAllUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NamnAllUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NamnAllUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NamnAllUtrustning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTillbaka2;
    private javax.swing.JComboBox<String> cbtnUtrustning;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
