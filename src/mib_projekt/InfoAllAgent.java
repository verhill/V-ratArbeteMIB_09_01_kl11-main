/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib_projekt;

import oru.inf.InfDB;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import oru.inf.InfException;


/**
 *
 * @author David
 */
public class InfoAllAgent extends javax.swing.JFrame {
    private InfDB idb;
    private int valtAgentID;
    /**
     * Creates new form InfoAllAlien
     */
    public InfoAllAgent(InfDB idb) {
        initComponents();
        this.idb = idb;
        fyllAlienNamn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        ListAllInformationAgent = new javax.swing.JList<>();
        jlSokAgent = new javax.swing.JLabel();
        jlSokMedAgentID = new javax.swing.JLabel();
        btnBekraftaSokning = new javax.swing.JButton();
        lblFelmeddelande = new javax.swing.JLabel();
        cbtnAgentNamn = new javax.swing.JComboBox<>();
        btnTillbaka2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setViewportView(ListAllInformationAgent);

        jlSokAgent.setText("Sökfunktion Alien");

        jlSokMedAgentID.setText("Sök med AlienID");

        btnBekraftaSokning.setText("Bekräfta Sökning");
        btnBekraftaSokning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBekraftaSokningActionPerformed(evt);
            }
        });

        cbtnAgentNamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbtnAgentNamnActionPerformed(evt);
            }
        });

        btnTillbaka2.setText("Tillbaka");
        btnTillbaka2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbaka2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jlSokAgent)
                        .addComponent(jlSokMedAgentID)
                        .addComponent(lblFelmeddelande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cbtnAgentNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBekraftaSokning))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btnTillbaka2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlSokAgent)
                            .addComponent(btnTillbaka2))
                        .addGap(18, 18, 18)
                        .addComponent(jlSokMedAgentID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbtnAgentNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBekraftaSokning))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFelmeddelande)
                .addGap(95, 95, 95))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fyllAlienNamn(){
        try {
            // SQL-fråga för att hämta Plats_ID och Benamning från plats-tabellen
            String fraga = "SELECT Agent_ID, Namn FROM agent;";
            // Utför SQL-frågan och få resultatet
            var resultat = idb.fetchRows(fraga);

            // Iterera över varje rad i resultatet
            for (HashMap<String, String> rad : resultat) {
                // Hämta Plats_ID och Benamning från raden
                String AgentIdStr = rad.get("Agent_ID");
                String AgentNamn = rad.get("Namn");

                // Kontrollera om Plats_ID är inte null
                if (AgentIdStr != null) {
                    // Lägg till Benamning i dropdown-menyn
                    cbtnAgentNamn.addItem(AgentNamn);
                }
            }
        } catch (InfException ex) {
            // Visa felmeddelande om något går fel med databasen
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }
    }
    
    private void btnBekraftaSokningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBekraftaSokningActionPerformed
        // TODO add your handling code here:
        String valtAgentNamn = (String) cbtnAgentNamn.getSelectedItem();
        
        
        try {
            // SQL-fråga för att hämta Alien_ID baserat på namnet
            String fraga = "SELECT Agent_ID FROM Agent WHERE Namn = '" + valtAgentNamn + "'";
            // Utför SQL-frågan och få resultatet
            var resultat = idb.fetchSingle(fraga);


                String Fraga = "SELECT Agent_ID, Namn, Telefon, Anstallningsdatum, Administrator , Epost, Losenord, Omrade FROM agent WHERE Agent_ID = " + resultat + "";

                ArrayList<HashMap<String, String>> agentInfoLista;
                agentInfoLista = idb.fetchRows(Fraga);
                System.out.println("valtAgentnamn; " + valtAgentNamn);
                
                DefaultListModel<String> agentLista = new DefaultListModel<>();
                for (HashMap<String, String> enAgent : agentInfoLista) {
                    agentLista.addElement("Agent_ID: " + enAgent.get("Agent_ID"));
                    agentLista.addElement("Namn: " + enAgent.get("Namn"));
                    agentLista.addElement("Telefon: " + enAgent.get ("Telefon"));
                    agentLista.addElement("Anstallningsdatum: " + enAgent.get("Anstallningsdatum"));
                    agentLista.addElement("Administrator: " + enAgent.get("Administrator"));
                    agentLista.addElement("Epost: " + enAgent.get("Epost"));
                    agentLista.addElement("Losenord: " + enAgent.get("Losenord"));
                    agentLista.addElement("Omrade: " + enAgent.get("Omrade"));
                }
                
                ListAllInformationAgent.setModel(agentLista);
                ListAllInformationAgent.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            } catch (InfException | NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Något gick inte som planerat:" + e.getMessage());
                e.printStackTrace();
           
            }
    }//GEN-LAST:event_btnBekraftaSokningActionPerformed

    private void cbtnAgentNamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbtnAgentNamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbtnAgentNamnActionPerformed

    private void btnTillbaka2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbaka2ActionPerformed
        // TODO add your handling code here:
        EfterInloggAdmin nytt = new EfterInloggAdmin();
        InfoAllAgent.this.setVisible(false);
        nytt.setVisible(true);
    }//GEN-LAST:event_btnTillbaka2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoAllAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        try{
            InfDB idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            InfoAllAgent agentFrame = new InfoAllAgent(idb); 
            
        
            agentFrame.setSize(551, 301);
            agentFrame.setVisible(true);
        } catch (InfException Fel) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande: " + Fel.getMessage());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListAllInformationAgent;
    private javax.swing.JButton btnBekraftaSokning;
    private javax.swing.JButton btnTillbaka2;
    private javax.swing.JComboBox<String> cbtnAgentNamn;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlSokAgent;
    private javax.swing.JLabel jlSokMedAgentID;
    private javax.swing.JLabel lblFelmeddelande;
    // End of variables declaration//GEN-END:variables
}
