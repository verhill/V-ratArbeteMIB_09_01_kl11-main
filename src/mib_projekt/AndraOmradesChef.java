/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib_projekt;

import java.util.HashMap;

import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author David
 */
public class AndraOmradesChef extends javax.swing.JFrame {

    private InfDB idb;
    private int valtAgentID;

    /**
     * Creates new form AndraOmradesChef
     */
    public AndraOmradesChef() {
        initComponents();
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("funka");
            fyllCbtnAgentNamn();
        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlAgentID = new javax.swing.JLabel();
        jlOmrade = new javax.swing.JLabel();
        jlAndraOmradesChef = new javax.swing.JLabel();
        ValjOmradeCBox = new javax.swing.JComboBox<>();
        jbGodkanAndring = new javax.swing.JButton();
        btnTillbaka3 = new javax.swing.JButton();
        cbtnAgentNamn = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlAgentID.setText("Agent:");

        jlOmrade.setText("Område");

        jlAndraOmradesChef.setText("Andra Områdeschef");

        ValjOmradeCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Svealand", "Götaland", "Norrland" }));

        jbGodkanAndring.setText("godkän ändring");
        jbGodkanAndring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGodkanAndringActionPerformed(evt);
            }
        });

        btnTillbaka3.setText("Tillbaka");
        btnTillbaka3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbaka3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbtnAgentNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlAgentID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbGodkanAndring, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlAndraOmradesChef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ValjOmradeCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                        .addComponent(btnTillbaka3)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlAgentID)
                    .addComponent(btnTillbaka3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbtnAgentNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlOmrade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ValjOmradeCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlAndraOmradesChef)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbGodkanAndring)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGodkanAndringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGodkanAndringActionPerformed
        // Andra omdrådeschef 
        String valtAgentNamn = (String) cbtnAgentNamn.getSelectedItem();

        try {

            String omrade = ValjOmradeCBox.getSelectedItem().toString();
            String fraga = "SELECT Agent_ID FROM Agent WHERE Namn = '" + valtAgentNamn + "'";
            // Utför SQL-frågan och få resultatet
            var resultat = idb.fetchSingle(fraga);

            if (resultat != null) {
                // Konvertera resultatet till integer och lagra det i valtAlienID
                valtAgentID = Integer.parseInt(resultat);
            }

                String omradesID = idb.fetchSingle("SELECT Omrades_ID FROM omrade WHERE benamning =" + "'" + omrade + "'");
                
                String kollaRedanOmradeschef = "SELECT Agent_ID from Omradeschef WHERE Agent_ID = " +  valtAgentID;
                String svarRedanOmradeschef = idb.fetchSingle(kollaRedanOmradeschef);
                
                
                if(svarRedanOmradeschef != null){
                     JOptionPane.showMessageDialog(null, "Agenten är redan områdeschef");
                }else{

                // Uppdaterar den nya områdeschefen
                idb.update("UPDATE omradeschef SET agent_ID = " +  valtAgentID + ", omrade = " + "'" + omradesID + "'" + "WHERE omrade = '" + omradesID + "'");
                // Meddalar användaren att ändringen är lyckad
                JOptionPane.showMessageDialog(null, "Områdeschefen har nu lyckats ändrats");
                }
        } catch (InfException e) {
            //Om något annat fel visas detta.
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + e.getMessage());
        }

    }//GEN-LAST:event_jbGodkanAndringActionPerformed

    private void fyllCbtnAgentNamn() {
        try {
            // SQL-fråga för att hämta Plats_ID och Benamning från plats-tabellen
            String fraga = "SELECT Agent_ID, Namn FROM Agent;";
            // Utför SQL-frågan och få resultatet
            var resultat = idb.fetchRows(fraga);

            // Iterera över varje rad i resultatet
            for (HashMap<String, String> rad : resultat) {
                // Hämta Plats_ID och Benamning från raden
                String AgentIdStr = rad.get("Agent_ID");
                String AgentNamn = rad.get("Namn");

                // Kontrollera om Plats_ID är inte null
                if (AgentIdStr != null) {
                    // Konvertera Plats_ID till integer
                    // Lägg till Benamning i dropdown-menyn
                    cbtnAgentNamn.addItem(AgentNamn);
                }
            }
        } catch (InfException ex) {
            // Visa felmeddelande om något går fel med databasen
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }
    }


    private void btnTillbaka3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbaka3ActionPerformed
        // TODO add your handling code here:
        EfterInloggAdmin nytt = new EfterInloggAdmin();
        AndraOmradesChef.this.setVisible(false);
        nytt.setVisible(true);
    }//GEN-LAST:event_btnTillbaka3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AndraOmradesChef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AndraOmradesChef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AndraOmradesChef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AndraOmradesChef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AndraOmradesChef().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ValjOmradeCBox;
    private javax.swing.JButton btnTillbaka3;
    private javax.swing.JComboBox<String> cbtnAgentNamn;
    private javax.swing.JButton jbGodkanAndring;
    private javax.swing.JLabel jlAgentID;
    private javax.swing.JLabel jlAndraOmradesChef;
    private javax.swing.JLabel jlOmrade;
    // End of variables declaration//GEN-END:variables
}
