/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib_projekt;

import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author hillv
 */
public class AndraInfoAgent extends javax.swing.JFrame {

    private InfDB idb;
    private int omradeID;
    private int AgentID;

    /**
     * Creates new form AndraInfoAgent
     */
    public AndraInfoAgent() {
        initComponents();
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("Databasanslutning lyckades");
            fyllOmradesCBox();
            setTextFields();
            fyllAdminCBox();
           

        } catch (InfException ettUndantag) {
            // Visa felmeddelande om det uppstår problem med databasanslutningen
            JOptionPane.showMessageDialog(null, "Något gick fel vid anslutning till databasen!");
            System.out.println("Internt felmeddelande: " + ettUndantag.getMessage());
        }
    }

    public AndraInfoAgent(int AgentID) {
        initComponents();
        this.AgentID = AgentID;
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
            System.out.println("Databasanslutning lyckades");
            fyllOmradesCBox();
            setTextFields();
            fyllAdminCBox();
            

        } catch (InfException ettUndantag) {
            // Visa felmeddelande om det uppstår problem med databasanslutningen
            JOptionPane.showMessageDialog(null, "Något gick fel vid anslutning till databasen!");
            System.out.println("Internt felmeddelande: " + ettUndantag.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        cbtnOmrade = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtNamn = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        cbtnAdmin = new javax.swing.JComboBox<>();
        btnAndraInfoAgent = new javax.swing.JButton();
        txtNyttLosenord = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();
        lbRas = new javax.swing.JLabel();
        jLAndrat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setText("Område:");

        jLabel6.setText("Namn:");

        jLabel7.setText("Telefon");

        cbtnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbtnAdminActionPerformed(evt);
            }
        });

        btnAndraInfoAgent.setText("Ändra");
        btnAndraInfoAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAndraInfoAgentActionPerformed(evt);
            }
        });

        jLabel3.setText("Losenord:");

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        lbRas.setText("Admin:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbRas, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbtnAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbtnOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLAndrat, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNyttLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAndraInfoAgent, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTillbaka)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTillbaka)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbRas)
                            .addComponent(jLabel6))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNyttLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbtnAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbtnOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAndraInfoAgent)
                    .addComponent(jLAndrat, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fyllOmradesCBox() {
        try {
            String nuvarandeOmrade = hamtaNuvarandeOmrade();

            // SQL-fråga för att hämta Plats_ID och Benamning från plats-tabellen
            String fraga = "SELECT Omrades_ID, Benamning FROM omrade;";
            // Utför SQL-frågan och få resultatet

            cbtnOmrade.addItem(nuvarandeOmrade);
            var resultat = idb.fetchRows(fraga);

            // Iterera över varje rad i resultatet
            for (HashMap<String, String> rad : resultat) {
                // Hämta Plats_ID och Benamning från raden
                String OmradesIdStr = rad.get("Omrades_ID");
                String OmradesNamn = rad.get("Benamning");

                // Kontrollera om Plats_ID är inte null
                if (OmradesIdStr != null) {
                    // Konvertera Plats_ID till integer
                    omradeID = Integer.parseInt(OmradesIdStr);
                    // Lägg till Benamning i dropdown-menyn
                    cbtnOmrade.addItem(OmradesNamn);
                }
            }
        } catch (InfException ex) {
            // Visa felmeddelande om något går fel med databasen
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }
    }

    private void fyllAdminCBox() {
    try {
        // Hämta nuvarande adminstatus
        String nuvarandeAdmin = hamtaNuvarandeAdminStatus();
        if(nuvarandeAdmin.equals("J")){
             cbtnAdmin.addItem("Ja");
            cbtnAdmin.addItem("Nej");
        }
        else{
            cbtnAdmin.addItem("Nej");
             cbtnAdmin.addItem("Ja");
      
        }
       
    } catch (Exception ex) {
        // Hantera exception om något går fel vid hämtning av adminstatus
        JOptionPane.showMessageDialog(null, "Något gick fel!");
        System.out.println("Internt felmeddelande" + ex.getMessage());
    }
}

    private void setTextFields() {

        try {
            String namnFraga = "SELECT Namn FROM AGENT WHERE AGENT_ID = '" + AgentID + "'";
            String svarNamn = idb.fetchSingle(namnFraga);
            txtNamn.setText(svarNamn);

            String losenordFraga = "SELECT Losenord FROM AGENT WHERE AGENT_ID = '" + AgentID + "'";
            String svarLosenord = idb.fetchSingle(losenordFraga);
            txtNyttLosenord.setText(svarLosenord);

            String telefonFraga = "SELECT Telefon FROM AGENT WHERE AGENT_ID = '" + AgentID + "'";
            String svarTelefon = idb.fetchSingle(telefonFraga);
            txtTelefon.setText(svarTelefon);

        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }

    }

    private String hamtaNuvarandeOmrade() {
        try {
            String platsFraga = "SELECT Benamning FROM Omrade WHERE Omrades_ID = (SELECT Omrade FROM Agent WHERE Agent_ID = '" + AgentID + "')";
            String nuvarandePlats = idb.fetchSingle(platsFraga);

            // Kontrollera om resultatet är null eller tomt
            if (nuvarandePlats == null || nuvarandePlats.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingen plats hittades för den angivna alien.");
                return null;
            }

            return nuvarandePlats;
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel när platsen skulle hämtas!");
            System.out.println("Internt felmeddelande: " + ex.getMessage());
            return null;
        }
    }

   private String hamtaNuvarandeAdminStatus() {
    try {
        String AdminFraga = "SELECT Administrator FROM Agent WHERE Agent_ID = '" + AgentID + "'";
        String nuvarandeAdmin = idb.fetchSingle(AdminFraga);

        // Kontrollera om resultatet är null eller tomt
        if (nuvarandeAdmin == null || nuvarandeAdmin.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingen adminstatus hittades för den angivna agenten.");
            return null;
        }

        return nuvarandeAdmin;
    } catch (InfException ex) {
        JOptionPane.showMessageDialog(null, "Något gick fel när adminstatus skulle hämtas!");
        System.out.println("Internt felmeddelande: " + ex.getMessage());
        return null;
    }
}

    private void cbtnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbtnAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbtnAdminActionPerformed

    private void btnAndraInfoAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAndraInfoAgentActionPerformed
        if(Inmatningsvalidering.telefonValidering(txtTelefon) && Inmatningsvalidering.textValidering(txtNamn) && Inmatningsvalidering.textValidering(txtNyttLosenord)){
            try {
                // Hämtar infon från dem olika textfälten
                String losenord = txtNyttLosenord.getText();
                String telefon = txtTelefon.getText();
                String Namn = txtNamn.getText();
                String adminstatus;
                
                String admin = cbtnAdmin.getSelectedItem().toString();
                if (admin.equals("Ja")) {
                    adminstatus = "J";
                } else {
                    adminstatus = "N";
                }
                //sql fråga som uppdaterar agenten
                String andraAgentFraga = "UPDATE AGENT SET Losenord ='"+losenord+ "', Telefon ='"+telefon+"', Namn ='"+ Namn+"', Omrade = '" + omradeID + "', Administrator = '"+adminstatus+"' WHERE AGENT_ID = '" + AgentID + "';";
                idb.update(andraAgentFraga);
                jLAndrat.setText("Agentens info är ändrat");
            } catch (InfException ex) {
                Logger.getLogger(AndraInfoAgent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAndraInfoAgentActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        // TODO add your handling code here:
        NamnAllaAgenter nytt = new NamnAllaAgenter();
        AndraInfoAgent.this.setVisible(false);
        nytt.setVisible(true);
    }//GEN-LAST:event_btnTillbakaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AndraInfoAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AndraInfoAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AndraInfoAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AndraInfoAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AndraInfoAgent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAndraInfoAgent;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cbtnAdmin;
    private javax.swing.JComboBox<String> cbtnOmrade;
    private javax.swing.JLabel jLAndrat;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbRas;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtNyttLosenord;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
